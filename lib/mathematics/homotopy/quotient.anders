{- Quotient: https://anders.groupoid.space/mathematics/homotopy/quotient/

   HoTT 6.8 Quotients

   Copyright (c) Groupoid Infinity, 2014-2025. -}

module quotient where
import lib/mathematics/homotopy/coequalizer

-- 1-quotient

def full (A : U) (R : A → A → U) := Σ (x y : A), R x y
def quot (A : U) (R : A → A → U) := coequ (full A R) A (λ (w : full A R), w.1) (λ (w : full A R), w.2.1)
def quot₁ (A : U) (R : A → A → U) : A → quot A R := ι₂ (full A R) A (λ (w : full A R), w.1) (λ (w : full A R), w.2.1)
def quot₂ (A : U) (R : A → A → U) (x y : A) (ρ : R x y) : Path (quot A R) (quot₁ A R x) (quot₁ A R y)
 := resp (full A R) A (λ (w : full A R), w.1) (λ (w : full A R), w.2.1) (x, y, ρ)
def quot-mk (α: U) (r: α → α → U) (a: α) := quot₁ α r a
def quot-sound (α: U) (r: α → α → U) (a b : α) (ρ : r a b) : Path (quot α r) (quot₁ α r a) (quot₁ α r b)
 := resp (full α r) α (λ (w : full α r), w.1) (λ (w : full α r), w.2.1) (a, b, ρ)

axiom quot-elim (α: U) (r: α → α → U) (C: quot α r → U) (f: Π (a: α), C (quot-mk α r a)) : Π (q : quot α r), C q
axiom quot-lift (α β: U) (r: α → α → U) (f: α → β) (m: Π (a b : α) (ρ : r a b), Path β (f a) (f b)) : quot α r → β
axiom quot-comp (α β: U) (r: α → α → U) (f: α → β) (m: Π (a b : α) (ρ : r a b), Path β (f a) (f b)) (a: α)
    : Path β (quot-lift α β r f m (quot-mk α r a)) (f a)

-- [van Doorn] 2016 2-quotient
-- Reducing higher inductive types to quotients
-- https://florisvandoorn.com/talks/Toronto2016hits.pdf

axiom R¯ (A: U) (R : A → A → U) : A → A → U
axiom |-| (A : U) (R : A → A → U) (x y : A) (_ : R x y) : R¯ A R x y
axiom ro (A : U) (R : A → A → U) (x y : A) (p : Path A x y) : R¯ A R x y
axiom −¹ (A : U) (R : A → A → U) (x y : A) (r : R¯ A R x y) : R¯ A R y x
axiom −·− (A : U) (R : A → A → U) (x y z : A) (r : R¯ A R x y) (r' : R¯ A R y z ) : R¯ A R x z

axiom 2-quot (A : U) (R : A → A → U) (Q : Π (x y : A), R¯ A R x y → R¯ A R x y → U) : U
axiom 2-quot₁ (A : U) (R : A → A → U) (Q : Π (x y : A), R¯ A R x y → R¯ A R x y → U) (a: A) : 2-quot A R Q
axiom 2-quot₂ (A : U) (R : A → A → U) (Q : Π (x y : A), R¯ A R x y → R¯ A R x y → U) (x y : A) (r : R x y)
    : Path (2-quot A R Q) (2-quot₁ A R Q x) (2-quot₁ A R Q y)
axiom 2-quot₃ (A : U) (R : A → A → U) (Q : Π (x y : A), R¯ A R x y → R¯ A R x y → U) (x y : A) (r1 r2 : R x y)
    : Path (Path (2-quot A R Q) (2-quot₁ A R Q x) (2-quot₁ A R Q y)) (2-quot₂ A R Q x y r1) (2-quot₂ A R Q x y r2)
